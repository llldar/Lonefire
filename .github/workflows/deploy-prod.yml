name: deploy-prod

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['14']

    environment:
      name: Production

    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: determine what need to be deployed
        run: |
          if ! git diff HEAD^ HEAD --quiet ./packages/vlepo-shared; then
              echo "DEPLOY_SHARED=true" >> "$GITHUB_ENV"
          fi
          if ! git diff HEAD^ HEAD --quiet ./packages/vlepo-server; then
              echo "DEPLOY_SERVER=true" >> "$GITHUB_ENV"
          fi
          if ! git diff HEAD^ HEAD --quiet ./packages/vlepo-client; then
              echo "DEPLOY_CLIENT=true" >> "$GITHUB_ENV"
          fi

      - name: use Node.js ${{ matrix.node_version }}
        if: env.DEPLOY_SHARED == 'true' || env.DEPLOY_SERVER == 'true'
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node_version }}

      - name: install dependencies
        if: env.DEPLOY_SHARED == 'true' || env.DEPLOY_SERVER == 'true'
        run: yarn --frozen-lockfile

      - name: deploy shared
        if: env.DEPLOY_SHARED == 'true'
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: build server
        if: env.DEPLOY_SERVER == 'true'
        run:
          yarn build:server

      - name: deploy server
        if: env.DEPLOY_SERVER == 'true'
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: deploy-server.yml
          directory: ./ansible-playbooks/
          key: ${{secrets.SSH_PRIVATE_KEY}}
          inventory: |
            [web]
            ${{secrets.SERVER_URL}} ansible_port=${{secrets.SERVER_SSH_PORT}}

      - name: Get current date
        if: env.DEPLOY_CLIENT == 'true'
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d-%H-%M-%S')"

      - name: create git tag for client
        if: env.DEPLOY_CLIENT == 'true'
        uses: actions/github-script@v4
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/deployment-${{ steps.date.outputs.date }}",
              sha: context.sha
            })

      - name: deploy client
        if: env.DEPLOY_CLIENT == 'true'
        run:
          curl ${{ secrets.VERCEL_WEBHOOK_URL }}